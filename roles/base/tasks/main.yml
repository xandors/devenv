---

- name: Add user to sudo
  lineinfile:
    path: "/etc/sudoers.d/{{ user_name }}"
    line: "{{ user_name }} ALL=(ALL) NOPASSWD: ALL"
    state: present
    mode: 0440
    create: yes
    validate: "visudo -cf %s"
  become: true

- name: Ensure directory exists
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user_name }}"
    recurse: yes
  with_items:
    - "{{ directories }}"

- name: Ensure file exists
  file:
    path: "{{ item }}"
    state: touch
  with_items:
    - "{{ files }}"

- name: make sure ssl certificates are installed
  copy:
    content: "{{ item.content }}"
    dest: "~/{{ item.name }}"
    mode: 0600
  with_items: "{{ ssl }}"
  # no_log: true

- name: make sure aws credentials are installed
  copy:
    content: "{{ item.content }}"
    dest: "~/{{ item.name }}"
    mode: 0600
  with_items: "{{ aws }}"
  # no_log: true

- name: Write scripts
  template:
    src: "{{ item }}.j2"
    dest: "~/.local/bin/{{ item }}"
    force: yes
    mode: 0755
  with_items: "{{ scripts.bin }}"

- name: Write root scripts
  template:
    src: "{{ item }}.j2"
    dest: "~/.{{ item }}"
    force: yes
    mode: 0755
  with_items: "{{ scripts.root }}"

- name: Ensure scripts directories exist
  file:
    path: "~/{{ item.dir }}"
    state: directory
    owner: "{{ user_name }}"
    recurse: yes
  with_items:
    - "{{ scripts.specific }}"

- name: Write specific scripts
  template:
    src: "{{ item.file }}.j2"
    dest: "~/{{ item.dir }}/{{ item.file }}"
    force: yes
    mode: 0755
  with_items: "{{ scripts.specific }}"

- name: Install git
  apt:
    name: git
    state: present
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Configure git
  git_config:
    name:  "{{ item.key }}"
    scope: global
    value: "{{ item.value }}"
  with_items: "{{ git_config }}"

- name: Checkout git repos
  git:
    repo: "{{ item.repo }}"
    dest: "~/{{ item.name }}"
    update: no
  with_items: "{{ git_repos }}"
  ignore_errors: yes

- name: Checkout repos
  git:
    repo: "{{ item.repo }}"
    dest: "~/{{ item.name }}"
    update: no
  with_items: "{{ repos }}"
  ignore_errors: yes

- debug:
    msg: "{{ ansible_distribution }}"
